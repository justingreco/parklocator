<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>City of Raleigh Park Locator</title>
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0"/> <!--320-->

    <link rel="Stylesheet" href="LocalGovernment.css" />
    <link rel="Stylesheet" href="ParkFinder.css" />
    <style type="text/css">
        @import "http://serverapi.arcgisonline.com/jsapi/arcgis/3.0/js/dojo/dijit/themes/claro/claro.css";

    </style>
    <script type="text/javascript" src="JS/Utils.js"></script>
    <script type="text/javascript" src="JS/BaseMapGallery.js"></script>
    <script type="text/javascript" src="JS/locator.js"></script>
    <script src="JS/Route.js" type="text/javascript"></script>
    <script type="text/javascript">
        var djConfig = {
            parseOnLoad: true
        }
    </script>
    <script type="text/javascript" src="http://serverapi.arcgisonline.com/jsapi/arcgis/?v=3.0"
        djconfig="parseOnLoad:true"></script>
	
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.21/jquery-ui.min.js"></script>
    
    <script type="text/javascript">

        dojo.require("esri.map");
        dojo.require("esri.tasks.query");
        dojo.require("esri.tasks.geometry");
        dojo.require("esri.layers.FeatureLayer");
        dojo.require("dijit.layout.ContentPane");
        dojo.require("dijit.layout.BorderContainer");
        dojo.require("dijit.Dialog");
        dojo.require("dijit.form.Button");
        dojo.require("dijit.TooltipDialog");
        dojo.require("dijit.form.ToggleButton");
        dojo.require("dojox.widget.Standby");
        dojo.require("esri.tasks.route");   
		dojo.require("dijit.form.CheckBox");
		dojo.require("dojox.layout.TableContainer");
		dojo.require("dojo.store.Memory");
		dojo.require("dojo.parser");
		dojo.require("dijit.form.FilteringSelect");
		dojo.require("dijit.form.Select");
		dojo.require("dojo.data.ItemFileReadStore");
		dojo.require("esri.tasks.closestfacility");
		dojo.require("esri.tasks.gp");
		dojo.require("dojo.dom-style");
		dojo.require("esri.tasks.PrintTask");
		dojo.require("dojo.io.script");
		
        var baseMapLayerCollection; //variable to store basemap collection
		var opLayerCollection;
        var bufferDistance;    //variable for storing the buffer distance
        var defaultAddress; //variable for storing the default address
        var devPlanLayerID = 'devPlanLayerID';  //Temp Feature layer ID
        var devPlanLayerURL;    //Variable for storing Feature layer URL
        var displayValue;  //variable for storing the displayed value at info window.
        var featureID; // variable used for storing the selected park id while sharing
        var findTask;  //Findtask object for querying feature layer        
        var geometryService; //Geometry used for Geocoding       
        var highlightPollLayerId = "highlightPollLayerId"; //Graphics layer object for displaying selected park
        var infoActivity; //variable for storing the activities
        var infoPopupFieldsCollection; //variable for storing the info window fields
        var infoWindowHeader; //variable for storing the info window header part
        var infoWindowHeight; //variable for storing the info window height
        var infoWindowWidth; //variable for storing the info window width
        var intervalIDs = new Array(); //Array of IntervalID of glow-effect.    
        var layer = true; 
        var locatorParams;      //variable to store location params  
        var locatorURL; //used for locating addresses     
        var map; //ESRI map object
        var rendererColor; //variable for storing the buffer color  
        var rippleColor; // variable for storing the ripple color   
        var routeparams; // variable for storing the route parameters
        var routeSymbol; //Symbol to mark the route.
        var routeTask; //Route Task to find the route.
        var searchFields; //variable for storing the search fields
        var tempBufferLayer = 'tempBufferLayer'; //Graphics layer object for displaying buffered region
        var tempGraphicsLayerId = 'tempGraphicsLayerID';  //variable to store graphics layer ID
        var tinyURLServiceURL;    //variable to store tinyurl generator     
		var activityContainer;
		var ismobile=false;
        //Function to Initialize the map and read data from Configuration file
        function Init() {
            
			ismobile=navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i) != null;
			if (ismobile){
				dojo.style('divParkActivity', 'overflow','auto');
				dojo.style('divParkList','overflow','auto');
			}
			ShowLoadingMessage("Loading...");
            esri.config.defaults.io.proxyUrl = "proxy.ashx";        //Setting to use proxy file
            esri.config.defaults.io.alwaysUseProxy = false;
            esri.config.defaults.io.timeout = 180000;    //ersi request timeout value

            dojo.connect(window, "onresize", function () {
                if (map) {
                    map.resize();
                    map.reposition();
                }
            });

            dojo.connect(dojo.byId("txtAddress"), 'onkeypress', function (evt) {
                key = evt.keyCode;
                if (key == dojo.keys.ENTER) {
                    dojo.byId('txtAddress').blur();
                    Locate(this);
                }
            });
            dojo.xhrGet({
                url: "Config.txt",
                handleAs: "json",
                preventCache: true,
                load: function (responseObject, ioArgs) {
                    dojo.query(".dijitDialogCloseIcon", dojo.byId('dialogLoadMessage'))[0].title = 'Close';
                    dojo.byId('divLoadMessage').innerHTML = responseObject.SplashScreenMessage;
                    //dijit.byId('dialogLoadMessage').show();

                    var mapExtent = responseObject.DefaultExtent;
                    var extent = GetQuerystring('extent');
                    if (extent != "") {
                        zoomExtent = extent.split(',');
                    }
                    else {
                        zoomExtent = mapExtent.split(',');
                    }
					
					
					
                    map = new esri.Map("map", { slider: true,
						"fadeOnZoom": true,
						"force3Dtransforms": true,
						"navigationMode": "css-transforms",
						"logo": false,
						});
                    locatorParams = responseObject.LocatorFields;
					map.setExtent(new esri.geometry.Extent(parseFloat(zoomExtent[0]), parseFloat(zoomExtent[1]), parseFloat(zoomExtent[2]), parseFloat(zoomExtent[3]),  new esri.SpatialReference({ wkid: 2264 })));

                    dojo.connect(dijit.byId('imgHelp'), "onClick", function () {
                        window.open(helpFileURL, "helpwindow");
                        dijit.byId('imgHelp').attr("checked", false);
                    });

                    helpFileURL = responseObject.HelpFileUrl;
                    //dojo.byId('imgApp').src = responseObject.ApplicationImage;
                    dojo.byId('lblAppName').innerHTML = responseObject.ApplicationName;
                    var defaultSearch = responseObject.DefaultSearch;
                    defaultAddress = responseObject.DefaultAddress;
                    if (defaultSearch[0].address) {
                        dojo.byId('rbAddress').checked = true;
                         dojo.byId('txtAddress').title = 'Enter address,zip code';
                    }
                    else {
                        dojo.byId('rbParkActivity').checked = true;
                         dojo.byId('txtAddress').title = 'Enter park or activity name';
                    }                   
                    devPlanLayerURL = responseObject.DevPlanLayer;
                    locatorURL = responseObject.Locator;
                    queryTask = new esri.tasks.QueryTask(devPlanLayerURL);
                    bufferDistance = responseObject.BufferDistance;
                    displayValue = responseObject.DisplayValue;
                    tinyURLServiceURL = responseObject.TinyURLServiceURL;
                    baseMapLayerCollection = responseObject.BaseMapLayers;
					opLayerCollection = responseObject.OperationalLayers;
                    infoWindowHeader = responseObject.InfoWindowHeader;
                    infoWindowHeaderAlias = responseObject.InfoWindowHeaderAlias;
                    infoPopupFieldsCollection = responseObject.InfoPopupFieldsCollection;
                    infoPopupFieldsCollectionAlias = responseObject.InfoPopupFieldsCollectionAlias;
                    infoWindowHeight = responseObject.InfoWindowHeight;
                    infoWindowWidth = responseObject.InfoWindowWidth;
                    CreateBaseMapComponent();
					CreateLayersComponent();
					AddOpLayers();
					GetParkList();
                    searchFields = responseObject.SearchFields.split(",");
                    rendererColor = responseObject.BufferColor;
                    rippleColor = responseObject.RippleColor;
                    infoActivity = responseObject.Activities;
                    geometryService = new esri.tasks.GeometryService(responseObject.GeometryService);
                    dojo.connect(map, "onLoad", MapInitFunction);
                    RadioButtonClicked();
                    findTask = new esri.tasks.FindTask(responseObject.FindTaskLayer);
                    


                    $.ajax({
                        url: 'token.php',
                        type: 'POST',
                        dataType: 'json'
                    })
                    .done(function(data) {
                        routeTask = new esri.tasks.RouteTask(responseObject.RouteMapURL+'?f=json&token='+data.access_token);
                        dojo.connect(routeTask, "onSolveComplete", ShowRoute);
                        dojo.connect(routeTask, "onError", ErrorHandler);
                    })
                    .fail(function() {
                        console.log("error");
                    })
                    .always(function() {
                        console.log("complete");
                    });
                    
                    dojo.connect(routeTask, "onSolveComplete", ShowRoute);
                    dojo.connect(routeTask, "onError", ErrorHandler);
                    routeSymbol = new esri.symbol.SimpleLineSymbol().setColor(new dojo.Color([255, 239, 0, 1])).setWidth(4);//[75, 90, 46, 1])).setWidth(4);
                    customMouseHandler.addEvent(dojo.byId('divContainer'), 'mouseleave', HideBaseMapWidget, false);
					customMouseHandler.addEvent(dojo.byId('divLayersContainer'), 'mouseleave', HideLayersWidget, false);
                    customMouseHandler.addEvent(dojo.byId('divAppContent'), 'mouseleave', HideApplicationShareWidget, false);
					activityContainer = new dojox.layout.TableContainer({
						cols:2, dir:'rtl'
					},dojo.byId('divAmenities'));
					for (var i=0;i<infoActivity.length;i++)
					{
						var chk = dojo.create("input", {type:"checkbox",id:"amenityCb"+i, value:infoActivity[i].Alias},activityContainer.domNode);

						//var lbl = dojo.create("label", {for:"amenityCb"+i, innerHTML:infoActivity[i].Alias,id:"amenityLbl"+i});
						//dojo.place("<span>"+infoActivity[i].Alias+"</span>", dojo.byId("amenityCb"+i));
						//chk.appendChild(lbl);
						var lheight = "25px";
						if (infoActivity[i].Alias.length > 15){
							lheight = "12.5px";
						}
						new dijit.form.CheckBox({value:infoActivity[i].FieldName, label:"<div style='height:25px;line-height:"+lheight+";text-align:left'><img src='"+infoActivity[i].Image+"' style='height:25px;float:left;padding-right:3px;vertical-align:middle'></img>"+infoActivity[i].Alias+"</div>"}, chk);
						
						
						//chk.appendChild(lbl);
					
						//dojo.place(chk, activityContainer.domNode);
						/*var cb = new dijit.form.CheckBox({
							name:"amenityCb"+i, id:"amenityCb"+i, value:infoActivity[i].FieldName, title:infoActivity[i].Alias});
						//var label = dojo.create('label', {"for":"amenity"+i, "innerHTML":infoActivity[i].Alias});
						activityContainer.addChild(cb);*/
					}
					activityContainer.startup();
                }
            });
            dojo.connect(dojo.byId('txtAddress'), "onfocus", ClearDefaultText);
            dojo.connect(dojo.byId('txtAddress'), "onblur", ReplaceDefaultText);            
        }

        //function for map Initialized
        function MapInitFunction(map) {
            map.disableKeyboardNavigation();
			
            //setting Map slider position 
            if (dojo.byId('map_zoom_slider')) {
                dojo.byId('map_zoom_slider').style.height = '150px';
                dojo.byId('map_zoom_slider').style.top = '175px';
                dojo.byId('map_zoom_slider').style.left = '15px';
            }
            routeParams = new esri.tasks.RouteParameters();
            routeParams.stops = new esri.tasks.FeatureSet();
            routeParams.returnRoutes = false;
            routeParams.returnDirections = true;
            routeParams.directionsLengthUnits = esri.Units.MILES;
            routeParams.outSpatialReference = map.spatialReference;



            var devPlanLayer = new esri.layers.FeatureLayer(devPlanLayerURL, {
                mode: esri.layers.FeatureLayer.MODE_SNAPSHOT,
                outFields: ["*"],
                id: devPlanLayerID,
                displayOnPan: false
            });
			map.addLayer(devPlanLayer);
            var gLayer = new esri.layers.GraphicsLayer();
            gLayer.id = tempBufferLayer;
            map.addLayer(gLayer);

            gLayer = new esri.layers.GraphicsLayer();
            gLayer.id = tempGraphicsLayerId;

            dojo.connect(gLayer, "onMouseMove", function (evt) {
                ShowMapTip(evt, evt.graphic.attributes.Address);
            });
            dojo.connect(gLayer, "onMouseOut", CloseMapTip);
            map.addLayer(gLayer);
            gLayer = new esri.layers.GraphicsLayer();
            gLayer.id = highlightPollLayerId;
            map.addLayer(gLayer);
			
			if (!ismobile){
				dojo.connect(devPlanLayer, "onMouseMove", function (evt) {
					ShowMapTip(evt, evt.graphic.attributes[infoWindowHeader[0].FieldName]);
					map.setMapCursor("pointer");
				});
				dojo.connect(devPlanLayer, "onMouseOut", function (evt){
					CloseMapTip();
					map.setMapCursor("default");
				});			
			}


            dojo.connect(devPlanLayer, "onUpdateEnd", function (err) {
                /*var url = esri.urlToObject(window.location.toString());
                if (url.query && url.query != null) {                  
                    if (url.query.featureID) {
                        var bounds = url.query.featureID.split(",");
                        x = parseFloat(bounds[0]);
                        y = parseFloat(bounds[1]);
                        featureID = bounds[2];
                        Extent = new esri.geometry.Point(x, y, map.spatialReference);
                    }
                }
                if (featureID != "" && featureID != null && featureID != undefined) {
                    ExecuteQueryTask();
                }*/
				var url = esri.urlToObject(window.location.toString());
                if (url.query && url.query != null) {                  
                    if (url.query.park) {
						var featureName = url.query.park;
						featureName = featureName.replace(/\%20/g,' ');
						featureName = featureName.replace(/\+/g,' ');
                        SearchByName(featureName);
                    }
                }

                HideLoadingMessage();
                if (err) {
                    ShowDialog("Data Error", err.message);
                    return;
                }
            });
			
            dojo.connect(devPlanLayer, "onClick", function (evtArgs) {
                //ShowInfoWindow(evtArgs.graphic, evtArgs.graphic.geometry);
				SearchByName(evtArgs.graphic.attributes[infoWindowHeader[0].FieldName]);
                evtArgs = (evtArgs) ? evtArgs : event;
                evtArgs.cancelBubble = true;
                if (evtArgs.stopPropagation) {
                    evtArgs.stopPropagation();
                }
            });
            
            dojo.query(".dijitDialogCloseIcon", dojo.byId('dialogAlertMessage'))[0].title = 'Close';
            dojo.byId('divLoadingOK').focus();
        }
        dojo.addOnLoad(Init);
    </script>
	
	<script type="text/javascript">
	  var _gaq = _gaq || [];
	  _gaq.push(['_setAccount', 'UA-11110258-15']);
	  _gaq.push(['_trackPageview']);

	  (function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();
	</script>
	
</head>
<body class="claro" onkeydown="if (event.keyCode==dojo.keys.TAB) { if (dijit.byId('dialogLoadMessage').open || dijit.byId('dialogAlertMessage').open) {return event.keyCode!=dojo.keys.TAB;}}">
    <div dojotype="dijit.layout.BorderContainer" id="divMainContainer" design="headline"
        gutters="false" style="width: 100%; height: 100%;">
        <div id="map" dojotype="dijit.layout.ContentPane" region="center" style="position: relative;
            overflow: hidden; border: double silver; padding: 0px !important; width: 100%;
            height: 100%; padding: 0; margin: 0; border: 0;">
        </div>
    </div>
	    <div class="headerBackground">
    </div>
    <!--<div class="headerIcon">
        <div id="divimgglobeApp" style="background-color: transparent;">
            <img id="imgApp" style="width: 64px;" />
        </div>
    </div>-->
    <div class="header">
        <label id="lblAppName" align="left" valign="middle">
        </label>
    </div>
    <div class="headerContent" style="vertical-align: middle;" align="right">
        <table style="height: 100%;">
            <tr>
                <td align="center" style="width: 50px;" valign="middle">
                    <button dojotype="dijit.form.ToggleButton" id="imgGeolocation" onclick="ShowMyLocation(this)">
						<img src="images/imgGeolocation.png" width="30px" title="Find parks near my current location"
                            alt="" />
                    </button>
                </td>
				<td align="center" style="width: 40px;" valign="middle">
                    <button dojotype="dijit.form.ToggleButton" id="imgLayers" title="Switch Layers"
                        onclick="ShowHideLayersComponent();">
						<span>Layers</span>						
                        <img src="images/layers.png" width="30px" />
                    </button>
                </td>
                <td align="center" style="width: 40px;" valign="middle">
                    <button dojotype="dijit.form.ToggleButton" id="imgBaseMap" title="Switch Basemap"
                        onclick="ShowHideBaseMapComponent();">
						<span>Base Maps</span>						
                        <img src="images/imgBaseMap.png" width="30px" />
                    </button>
                </td>
                <td align="center" style="width: 40px;" valign="middle">
                    <button dojotype="dijit.form.ToggleButton" id="imgPrint" title="Print" onclick="Print()">
						<span>Print</span>
                        <img src="images/print.png" width="28px" />
                    </button>
                </td>		
                <td align="center" style="width: 40px;" valign="middle">
                    <button dojotype="dijit.form.ToggleButton" id="imgClear" title="Clear Search" onclick="ClearSearch()">
						<span>Clear</span>
                        <img src="images/clear.png" width="28px" />
                    </button>
                </td>		
				<td align="center" style="width: 40px;" valign="middle">
                    <button dojotype="dijit.form.ToggleButton" id="imgapplink" title="Share Map" onclick="ToggleApplication();">
                        <span>Share</span>
						<img src="images/imgSocialMedia.png" width="30px" />
                    </button>
                </td>
                <td align="center" style="width: 40px;" valign="middle">
                    <button dojotype="dijit.form.ToggleButton" id="imgHelp" title="Help">
                        <span>Help</span>
						<img src="images/Help.png" width="28px" />
                    </button>
                </td>
            </tr>
        </table>
    </div>

    <div id="divBaseMapTitleContainer" style="display: none;">
        <div id="divContainer" dojotype="dijit.layout.ContentPane" class="divBaseMapContainer">
            <div id="layerList">
            </div>
        </div>
    </div>
	 <div id="divLayersTitleContainer" style="display: none;">
        <div id="divLayersContainer" dojotype="dijit.layout.ContentPane" class="divBaseMapContainer">
            <div id="layersList">
            </div>
        </div>
    </div>
    <div id="divAppContainer" style="display: none;">
        <div dojotype="dijit.layout.ContentPane" class="divBaseMapContainer">
            <div id="divAppContent">
                <table cellpadding="0" cellspacing="0">
                    <tr>
                        <td>
                            <table cellpadding="2" cellspacing="2">
                                <tr>
                                    <td align="center" colspan="3" style="color: #FFFFFF; font-size: 11px;">
                                        Share this map
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 30px;" align="center">
                                        <img title="Facebook" class="imgSocialMediaIcon" src="images/img_facebook.png" onclick="ShareLink('facebook');" />
                                    </td>
                                    <td style="width: 30px;" align="center">
                                        <img title="Twitter" class="imgSocialMediaIcon" src="images/img_twitter.png" onclick="ShareLink('twitter');" />
                                    </td>
                                    <td style="width: 30px;" align="center">
                                        <img title="Email" class="imgSocialMediaIcon" src="images/img_email.png" onclick="ShareLink('mail');" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <div id="dialogAlertMessage" dojotype="dijit.Dialog">
        <table style="width: 100%;">
            <tr>
                <td align="center">
                    <div id="divMessage">
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                </td>
            </tr>
            <tr>
                <td align="center">
                    <div class="divOk" id="divOKButton" onclick="CloseDialog();">
                        OK</div>
                </td>
            </tr>
        </table>
    </div>
    <div id="dialogLoadMessage" dojotype="dijit.Dialog" style="width: 350px;">
        <table>
            <tr>
                <td>
                    <div id="divLoadMessage" style="background: #556B2F; color: #FFFFFF;">
                    </div>
                </td>
            </tr>
            <tr>
                <td align="center">
                    <div class="divOk" id="divLoadingOK" onclick="dijit.byId('dialogLoadMessage').hide();">
                        OK</div>
                </td>
            </tr>
        </table>
    </div>
    <div id="divLeftPanelBackground">
    </div>

    <div id="divSearchDetailsPanel">
		<div style="width:100%;">
			<div class="divAccordionTitle">
				Search Results</div>
			<div id="divParkListContainer" class="divInstructions">
				<span id="spanParkListContainer" style="margin-left: 20px; font-weight: bold;"></span>
				<div id="divParkList" style="color: #FFFFFF; height: 150px; overflow: hidden; margin-left: 10px;
					margin-top: 8px;">
				</div>
			</div>
			<div id="divParkActivityContainer" class="divInstructions" style="display:none">
				<span id="spanParkActivityContainer" style="margin-left: 20px; font-weight: bold;"></span>
				<div id="divParkActivity" style="color: #FFFFFF; height: 150px; overflow: hidden; margin-left: 10px;
					margin-top: 8px;">
				</div>
			</div>
			 <div id="divActivityListContainer" class="divInstructions" style="display:none";>
				<span id="spanActivityListContainer" style="margin-left: 20px; font-weight: bold;"></span>
				<div id="divActivityList" style="color: #FFFFFF; height: 150px; overflow: hidden; margin-left: 10px;margin-top:8px;">
				</div>
			</div>
			<div id="divParkDetails" style="color: #FFFFFF">
			</div>
			<div id="divParkClasses" style="color: #FFFFFF">

			</div>
			<div id="divParkDirections" style="color: #FFFFFF">
			</div>
		</div>
    </div>
    <div id="divToggleDetail" class="divToggleDetailCollapse" onclick="AnimateDetailsView();">
    </div>
	
	<div id="divRightPanelBackground">
    </div>
	<div style="display:none">
	                <td align="right" valign="middle">
                    <table>
                        <tr>
                            <td align="left" valign="bottom">
                                <input type="radio" id="rbAddress" name="rbSearchGroup" onclick="RadioButtonClicked()" />
                                <span id="spanAddress" class="text" onclick="ToggleSearch(this);">Find parks near me
                                </span>
                            </td>
                        </tr>
                        <tr>
                            <td align="left" valign="top">
                                <input type="radio" id="rbParkActivity" name="rbSearchGroup" onclick="RadioButtonClicked()" />
                                <span id="spanParkActivity" class="disabledText" onclick="ToggleSearch(this);">Find
                                    parks by name or activity </span>
                            </td>
                        </tr>
                    </table>
                </td>
	</div>
	    <div id="divLoadingIndicator">
        <table style="width: 100%; height: 100%;">
            <tr>
                <td align="center">
                    <table>
                        <tr>
                            <td align="center">
                                <img src="images/loading.gif" />
                            </td>
                            <td id="loadingMessage">
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>
	    <div id="divToggleDetailRight" class="divToggleDetailCollapseRight" onclick="AnimateDetailsViewRight();">
    </div>	
	<div id="divSearchPanel">
		<div style="width:100%">
			<div class="divAccordionTitle">
				Search
			</div>

				<br/>
				<div style="padding-left:10px">
                <td style="width: 270px;" align="left" valign="middle">
					<tr>
						<b><span class="text">Find Park By Name</span></b>
					</tr>
					<tr>
						<div id="divName">
							<input id="nameInput"/>
							<img id="imgLocateName" src="images/locate.png" onclick="SearchByName()" title="Search"
								style="height: 20px; position: absolute; right: 2px; top: 0px;" alt="" />
						</div>
					</tr>
					<tr>
						<br/>
						<b><span  class="text" >OR</span></b>
						<br/>						
					</tr>
					<tr>
						<br/>
						<b><span  class="text" >Find Parks Near My Address</span></b>
					<tr>
					<tr/>
					<tr>
						<div id="divAddress">
							<input type="text" id="txtAddress" value="" class="textBox" title="Enter an Address to Locate" />
							<img id="imgLocateAddress" src="images/locate.png" onclick="Locate(this);" title="Search"
								style="height: 20px; position: absolute; right: 2px; top: 0px;" alt="" />
						</div>					
					</tr>
					<br/>
					<tr>
						
						<select id="amenitiesSelect" name="amenitiesSelect" class="textBox" style="width:100px;">
							<option selected>With All</option>
							<option >With Any</option>
						</select>						


						<b><span class="text">of the Selected Amenities</span></b>
					</tr>
					<tr/>
                </td>
				</div>
				<br/>
				<td align="right" valign="middle">
					<!--<div id="divAmenities">
					</div>-->

					<tr>
						<div id="divAmenities">					
					</tr>

				</td>


		 </div>
    </div>
	
	
	

	<div id="divAddressContainer" style="display: none;">
    </div>
    <div id="dojoStandBy" dojotype="dojox.widget.Standby" color="#849966">
    </div>

	

</body>
</html>
